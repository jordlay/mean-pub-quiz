{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe( (profile: { user: any; }) => {\n      this.user = profile.user;\n    },\n      (    err: any) => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","<div ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n    </ul>\n</div>>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\"> Dashboard</h2>","import { Component } from '@angular/core';\n// import \"bootswatch/dist/sketchy/bootstrap.min.css\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<app-navbar></app-navbar>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService:AuthService, private router:Router){\r\n\r\n    }\r\n    canActivate(){\r\n        if (this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","<h2 class=\"page-header\">Login</h2>\n<div *ngIf=\"success === false\" class=\"alert alert-dismissible fade show alert-danger\">\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n  <strong>You have not filled out all the required fields.</strong> \n</div>\n<div *ngIf=\"this.errorMessage.length > 0\" class=\"alert alert-dismissible fade show alert-danger\">\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n  <strong>{{this.errorMessage}}</strong> \n</div>\n<form (submit)=\"onLoginSubmit()\" novalidate>\n    <fieldset>\n      <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter Password\">\n      </div>\n   \n      <button type=\"submit\" class=\"btn btn-primary\" value=\"Login\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: any;\n  password: any;\n  success = true;\n  errorMessage = \"\";\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    if (this.username === undefined || this.username === \"\" || this.password === undefined || this.password === \"\") {\n      this.success = false;\n      setTimeout(()=>{                           //<<<---using ()=> syntax\n        this.success = true;\n   }, 3000);\n    } else {\n      const user = {\n        username: this.username,\n        password: this.password\n      }\n      this.authService.authenticateUser(user).subscribe(data => {\n        console.log(data);\n        if ((data as any).success) {\n          // show success message\n          this.authService.storeUserData((data as any).token, (data as any).user);\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/login']);\n          this.errorMessage = (data as any).msg;\n          setTimeout(()=>{                           //<<<---using ()=> syntax\n            this.errorMessage = \"\";\n          }, 3000);\n        }\n      });\n  \n    }\n    \n \n  }\n}\n","<h2 >Register</h2>\n<div *ngIf=\"success === false\" class=\"alert alert-dismissible fade show alert-danger\">\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n  <strong>You have not filled out all the required fields.</strong>\n</div>\n<div *ngIf=\"errorMessage.length > 0\" class=\"alert alert-dismissible fade show alert-danger\">\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n  <strong>{{errorMessage}}</strong>\n</div>\n<form (submit)=\"onRegisterSubmit()\" novalidate>\n    <fieldset>\n      <!-- <legend>Legend</legend> -->\n   \n      \n      <div class=\"form-group\">\n        <label >Name</label>\n          <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Enter Full Name\" required>\n          <div class=\"invalid-feedback\">\n            Please choose a username.\n          </div>\n        </div>\n      <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Create a Username\">\n      </div>\n      <div class=\"form-group\">\n        <label>Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Create a Password\">\n      </div>\n   \n      <button type=\"submit\" class=\"btn btn-primary\"  >Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router,  ActivatedRoute, ParamMap } from '@angular/router'\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name!: String;\n  username!: String;\n  email!: String;\n  password!: String;\n  success = true;\n  // isValid = false;\n  errorMessage = \"\";\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    if (this.name === undefined || this.name === \"\" || this.email === undefined || this.email === \"\"  || this.password === undefined || this.password === \"\" || this.username === undefined || this.username === \"\") {\n      this.success = false;\n      setTimeout(()=>{                           //<<<---using ()=> syntax\n        this.success = true;\n   }, 3000);\n    } else {\n      // this.isValid = true;\n      const user = {\n        name: this.name,\n        email: this.email,\n        username: this.username,\n        password: this.password\n      }\n\n      this.authService.authenticateUser(user).subscribe(data => {\n        console.log((data as any).username ,user.username, this.username);\n        console.log((data as any).email ,user.email, this.username);\n        if ((data as any).username === user.username) {\n          this.errorMessage = \"That username is taken, please try a different one!\";\n        } else if ((data as any).email === user.email) {\n          this.errorMessage = \"That email is already associated with an account, try logging in instead!\"\n        } else {\n          this.authService.registerUser(user).subscribe(data => {\n            if ((data as any).success) {\n              this.success = true;\n              this.router.navigate(['/login']);\n            } else {\n              this.router.navigate(['/register']);\n              this.success = false;\n            }\n          });\n        }\n        setTimeout(()=>{                           //<<<---using ()=> syntax\n          this.errorMessage = \"\";\n        }, 3000);\n\n      });\n  \n  \n      \n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\n// NOTE: check if need ot import services?\nimport { AuthService } from './services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n{path: '', component: HomeComponent},\n{path: 'register', component: RegisterComponent},\n{path: 'login', component: LoginComponent},\n{path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n{path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n]; // sets up routes constant where you define your routes\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    // AuthService\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    NgbModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  exports: [RouterModule],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- <link rel=\"stylesheet\" href=\"https://bootswatch.com/sketchy/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\"> -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" [routerLink] =\"['/']\">Jordan's Quiz</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink] =\"['/']\" >Home</a>\n        </li>\n        <li  *ngIf=\"!authService.loggedIn()\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink] =\"['/login']\" >Login</a>\n        </li>\n        <li  *ngIf=\"!authService.loggedIn()\" class=\"nav-item\">\n         <a class=\"nav-link\"  [routerLink] =\"['/register']\">Register</a>\n        </li>\n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n            <a class=\"nav-link\"  [routerLink] =\"['/profile']\">Profile</a>\n        </li>\n        <li  *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\"  [routerLink] =\"['/dashboard']\">Dashboard</a>\n        </li>\n        <li *ngIf=\"authService.loggedIn()\"  class=\"nav-item\">\n          <a class=\"nav-link pointer\" (click)=\"onLogOutClick()\">Logout</a>\n          </li>\n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">About</a>\n        </li> --> \n        <!-- <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n          <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"#\">Separated link</a>\n          </div>\n        </li> -->\n      </ul>\n      <!-- <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n        <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form> -->\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onLogOutClick() {\n    this.authService.logout();\n    // add message \n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  helper = new JwtHelperService();\n  constructor(private http: HttpClient) { }\n\n  // NOTE: unsure why 3000\n  registerUser(user: any){\n    console.log('in register user', user);\n      let headers = new HttpHeaders();\n      headers.append('Content-Type', 'application/json');\n      console.log('headers:', headers);\n      return this.http.post('users/register', user, {headers: headers})\n        .pipe(map((res) => res));\n      \n    }\n\n  authenticateUser(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/authenticate', user, {headers: headers})\n      .pipe(map((res) => res));\n  }\n\n  getProfile(): any{\n    this.loadToken();\n    let headers = new HttpHeaders().append('Authorization', this.authToken).append('Content-Type', 'application/json');\n    return this.http.get('users/profile', {headers: headers})\n  }\n\n  storeUserData(token: string, user: any){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    return !(this.helper.isTokenExpired(localStorage.id_token));\n  }\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}