{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACUX,MAAM,gBAAgB;IAE3B,YAAoB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,CAAC,OAAuB,EAAE,EAAE;YACnE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,EACC,CAAK,GAAQ,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;;gFAZU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEAAiB;QACb,wEAAwB;QAAA,uDAAa;QAAA,4DAAK;QAC1C,wEAAuB;QACnB,wEAA4B;QAAA,uDAA2B;QAAA,4DAAK;QAC5D,wEAA4B;QAAA,uDAAqB;QAAA,4DAAK;QAC1D,4DAAK;QACT,4DAAM;QAAA,8DACN;;QAN4B,0DAAa;QAAb,8EAAa;QAEL,0DAA2B;QAA3B,qGAA2B;QAC3B,0DAAqB;QAArB,+FAAqB;;;;;;;;;;;;;;;;;;ACGlD,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,wEAAwB;QAAC,qEAAS;QAAA,4DAAK;;;;;;;;;;;;;;;;;;;;;;ACCvC,sDAAsD;AAO/C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCCzB,wEAAyB;QASzB,yEAAuB;QACrB,2EAA+B;QACjC,4DAAM;;;;;;;;;;;;;;;;;;;;;;ACfC,MAAM,SAAS;IAClB,YAAoB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAClE,CAAC;IACD,WAAW;QACP,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAC;YAC5B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,iCAAiC;IACjC,cAAc;QACV,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;;kEApBQ,SAAS;4FAAT,SAAS,WAAT,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;ICJtB,yEAAsF;IACpF,4EAAyD;IAAA,iEAAO;IAAA,4DAAS;IACzE,yEAAQ;IAAA,2GAAgD;IAAA,4DAAS;IACnE,4DAAM;;;IACN,yEAAiG;IAC/F,4EAAyD;IAAA,iEAAO;IAAA,4DAAS;IACzE,yEAAQ;IAAA,uDAAqB;IAAA,4DAAS;IACxC,4DAAM;;;IADI,0DAAqB;IAArB,oFAAqB;;ACExB,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFpE,YAAO,GAAG,IAAI,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;IACsD,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC9G,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;SACP;aAAM;YACL,MAAM,IAAI,GAAG;gBACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACvD,IAAK,IAAY,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,IAAY,CAAC,KAAK,EAAG,IAAY,CAAC,IAAI,CAAC,CAAC;oBACxE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,YAAY,GAAI,IAAY,CAAC,GAAG,CAAC;oBACtC,UAAU,CAAC,GAAE,EAAE;wBACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;iBACV;YACH,CAAC,CAAC,CAAC;SAEJ;IAGH,CAAC;;4EArCU,cAAc;8FAAd,cAAc;QDT3B,wEAAwB;QAAA,gEAAK;QAAA,4DAAK;QAClC,0GAGM;QACN,0GAGM;QACN,0EAA4C;QAAtC,sIAAU,mBAAe,IAAC;QAC5B,2EAAU;QACR,yEAAwB;QACtB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,2EAA4G;QAAzF,oLAAsB;QAAzC,4DAA4G;QAC9G,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAAgH;QAAzF,qLAAsB;QAA7C,4DAAgH;QAClH,4DAAM;QAEN,6EAA4D;QAAA,kEAAM;QAAA,4DAAS;QAC7E,4DAAW;QACb,4DAAO;;QArBH,0DAAuB;QAAvB,uFAAuB;QAIvB,0DAAkC;QAAlC,6FAAkC;QAQb,0DAAsB;QAAtB,iFAAsB;QAIlB,0DAAsB;QAAtB,iFAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;IEhBrD,0EAAsF;IACpF,6EAAyD;IAAA,iEAAO;IAAA,4DAAS;IACzE,yEAAQ;IAAA,2GAAgD;IAAA,4DAAS;IACnE,4DAAM;;;IACN,0EAA4F;IAC1F,6EAAyD;IAAA,iEAAO;IAAA,4DAAS;IACzE,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAM;;;IADI,0DAAgB;IAAhB,oFAAgB;;ACCnB,MAAM,iBAAiB;IAS5B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJpE,YAAO,GAAG,IAAI,CAAC;QACf,mBAAmB;QACnB,iBAAY,GAAG,EAAE,CAAC;IAEsD,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC/M,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAG;YACrH,IAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC;YAChD,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM,IAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE;YAC3I,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC;YAC7C,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM;YACL,MAAM,IAAI,GAAG;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YACD,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC1D,IAAK,IAAY,CAAC,OAAO,KAAK,IAAI,EAAE;oBAClC,IAAI,CAAC,YAAY,GAAG,wDAAwD,CAAC;oBAC7E,UAAU,CAAC,GAAE,EAAE;wBACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;iBACV;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBACvD,IAAK,IAAY,CAAC,OAAO,KAAK,IAAI,EAAE;4BAClC,IAAI,CAAC,YAAY,GAAG,2EAA2E,CAAC;4BAChG,UAAU,CAAC,GAAE,EAAE;gCACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;4BACzB,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;6BAAM;4BACL,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gCACnD,IAAK,IAAY,CAAC,OAAO,EAAE;oCACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oCACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;iCAClC;qCAAM;oCACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oCACpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iCACtB;4BACH,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;kFAjEU,iBAAiB;iGAAjB,iBAAiB;QDR9B,qEAAK;QAAA,mEAAQ;QAAA,4DAAK;QAClB,6GAGM;QACN,6GAGM;QACN,0EAA+C;QAAzC,yIAAU,sBAAkB,IAAC;QAC/B,2EAAU;QAIR,yEAAwB;QACtB,wEAAQ;QAAA,+DAAI;QAAA,4DAAQ;QAClB,2EAA8G;QAA3F,mLAAkB;QAArC,4DAA8G;QAC9G,0EAA8B;QAC5B,uFACF;QAAA,4DAAM;QACR,4DAAM;QACR,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAAmH;QAA5F,wLAAsB;QAA7C,4DAAmH;QACrH,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAC5B,4EAAoG;QAAhF,qLAAmB;QAAvC,4DAAoG;QACpG,4EAAmD;QAAA,0GAA8C;QAAA,4DAAQ;QAC3G,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAAmH;QAA5F,wLAAsB;QAA7C,4DAAmH;QACrH,4DAAM;QAEN,6EAAgD;QAAA,kEAAM;QAAA,4DAAS;QACjE,4DAAW;QACb,4DAAO;;QApCH,0DAAuB;QAAvB,uFAAuB;QAIvB,0DAA6B;QAA7B,6FAA6B;QAWN,0DAAkB;QAAlB,6EAAkB;QAOhB,0DAAsB;QAAtB,iFAAsB;QAIzB,0DAAmB;QAAnB,8EAAmB;QAKhB,0DAAsB;QAAtB,iFAAsB;;;;;;;;;;;;;;AE/BrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACH;AACC;AACT;AACwB;AACH;AACS;AACZ;AACe;AACN;AACnB;AACwB;AAClC;AAE7C,0CAA0C;AACY;AACE;AACR;;;AAEhD,MAAM,MAAM,GAAW;IACvB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAC;IACpC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAC;IAC5E,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAC;CACvE,CAAC,CAAC,uDAAuD;AAyBnD,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,CAAC,mEAAW,EAAE,6DAAS,CAAC,YAV1B;YACP,uEAAa;YACb,oEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,qEAAS;YACT,6FAAuB;YACvB,2DAAW;YACX,sEAAgB;SACjB,EACS,4DAAY;oIAIX,SAAS,mBArBlB,2DAAY;QACZ,mFAAe;QACf,gFAAc;QACd,yFAAiB;QACjB,6EAAa;QACb,4FAAkB,aAIlB,uEAAa;QACb,oEAAgB,gEAEhB,qEAAS;QACT,6FAAuB;QACvB,2DAAW;QACX,sEAAgB,aAER,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;ICjChB,wEAAsD;IACpD,uEAAgD;IAAA,gEAAK;IAAA,4DAAI;IAC3D,4DAAK;;IADiB,0DAA0B;IAA1B,6IAA0B;;;;IAEhD,wEAAsD;IACrD,uEAAmD;IAAA,mEAAQ;IAAA,4DAAI;IAChE,4DAAK;;IADiB,0DAA6B;IAA7B,6IAA6B;;;;IAEnD,wEAAoD;IAChD,uEAAkD;IAAA,kEAAO;IAAA,4DAAI;IACjE,4DAAK;;IADoB,0DAA4B;IAA5B,6IAA4B;;;;IAErD,wEAAqD;IACrD,uEAAoD;IAAA,oEAAS;IAAA,4DAAI;IACjE,4DAAK;;IADgB,0DAA8B;IAA9B,6IAA8B;;;;IAEnD,wEAAqD;IACnD,wEAAsD;IAA1B,kTAAyB;IAAC,iEAAM;IAAA,4DAAI;IAChE,4DAAK;;;ACnBR,MAAM,eAAe;IAE1B,YAAmB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,QAAQ;IACR,CAAC;IACD,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,eAAe;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;8EAVU,eAAe;+FAAf,eAAe;QDT5B,yEAA4D;QACxD,uEAA8C;QAAA,wEAAa;QAAA,4DAAI;QAC/D,4EAAiG;QAC/F,qEAAyC;QAE3C,4DAAS;QAGT,yEAAyD;QAEvD,wEAA4C;QAC1C,wEAA4B;QAC1B,uEAA2C;QAAA,+DAAI;QAAA,4DAAI;QACrD,4DAAK;QACL,2GAEK;QACL,2GAEK;QACL,2GAEK;QACL,2GAEK;QACL,2GAEO;QAcT,4DAAK;QAKP,4DAAM;QACR,4DAAM;;QA/CoB,0DAAqB;QAArB,6IAAqB;QAWnB,0DAAqB;QAArB,6IAAqB;QAErC,0DAA6B;QAA7B,6FAA6B;QAG7B,0DAA6B;QAA7B,6FAA6B;QAG9B,0DAA4B;QAA5B,4FAA4B;QAG3B,0DAA4B;QAA5B,4FAA4B;QAG7B,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;AEzBzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAC1B;AACiB;;;AAI/C,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,WAAM,GAAG,IAAI,mEAAgB,EAAE,CAAC;IACQ,CAAC;IAEzC,YAAY,CAAC,IAAS;QAClB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC9D,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEH,gBAAgB,CAAC,IAAS;QACxB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAClE,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;IAC3D,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACtE,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACnE,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,IAAS;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9D,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IAEvB,CAAC;;sEA5DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: any;\r\n  constructor(private authService:AuthService, private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe( (profile: { user: any; }) => {\r\n      this.user = profile.user;\r\n    },\r\n      (    err: any) => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div ngIf=\"user\">\r\n    <h2 class=\"page-header\">{{user.name}}</h2>\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\r\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\r\n    </ul>\r\n</div>>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2 class=\"page-header\"> Dashboard</h2>","import { Component } from '@angular/core';\r\n// import \"bootswatch/dist/sketchy/bootstrap.min.css\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-src';\r\n}\r\n","\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<app-navbar></app-navbar>\r\n\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService:AuthService, private router:Router){\r\n    }\r\n    canActivate(){\r\n        if (this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // if logged in, cannot type url \r\n    canAccessByURL(){\r\n        if (this.authService.loggedIn()){\r\n            this.router.navigate(['']);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}","<h2 class=\"page-header\">Login</h2>\r\n<div *ngIf=\"success === false\" class=\"alert alert-dismissible fade show alert-danger\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>You have not filled out all the required fields.</strong> \r\n</div>\r\n<div *ngIf=\"this.errorMessage.length > 0\" class=\"alert alert-dismissible fade show alert-danger\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>{{this.errorMessage}}</strong> \r\n</div>\r\n<form (submit)=\"onLoginSubmit()\" novalidate>\r\n    <fieldset>\r\n      <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter Username\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter Password\">\r\n      </div>\r\n   \r\n      <button type=\"submit\" class=\"btn btn-primary\" value=\"Login\">Submit</button>\r\n    </fieldset>\r\n  </form>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: any;\r\n  password: any;\r\n  success = true;\r\n  errorMessage = \"\";\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    if (this.username === undefined || this.username === \"\" || this.password === undefined || this.password === \"\") {\r\n      this.success = false;\r\n      setTimeout(()=>{                        \r\n        this.success = true;\r\n   }, 3000);\r\n    } else {\r\n      const user = {\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n      this.authService.authenticateUser(user).subscribe(data => {\r\n        if ((data as any).success) {\r\n          this.authService.storeUserData((data as any).token, (data as any).user);\r\n          this.router.navigate(['/dashboard']);\r\n        } else {\r\n          this.router.navigate(['/login']);\r\n          this.errorMessage = (data as any).msg;\r\n          setTimeout(()=>{                        \r\n            this.errorMessage = \"\";\r\n          }, 3000);\r\n        }\r\n      });\r\n  \r\n    }\r\n    \r\n \r\n  }\r\n}\r\n","<h2 >Register</h2>\r\n<div *ngIf=\"success === false\" class=\"alert alert-dismissible fade show alert-danger\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>You have not filled out all the required fields.</strong>\r\n</div>\r\n<div *ngIf=\"errorMessage.length > 0\" class=\"alert alert-dismissible fade show alert-danger\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>{{errorMessage}}</strong>\r\n</div>\r\n<form (submit)=\"onRegisterSubmit()\" novalidate>\r\n    <fieldset>\r\n      <!-- <legend>Legend</legend> -->\r\n   \r\n      \r\n      <div class=\"form-group\">\r\n        <label >Name</label>\r\n          <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Enter Full Name\" required>\r\n          <div class=\"invalid-feedback\">\r\n            Please choose a username.\r\n          </div>\r\n        </div>\r\n      <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input type=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Create a Username\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email address</label>\r\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Enter Email\">\r\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Create a Password\">\r\n      </div>\r\n   \r\n      <button type=\"submit\" class=\"btn btn-primary\"  >Submit</button>\r\n    </fieldset>\r\n  </form>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router,  ActivatedRoute, ParamMap } from '@angular/router'\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name!: String;\r\n  username!: String;\r\n  email!: String;\r\n  password!: String;\r\n  success = true;\r\n  // isValid = false;\r\n  errorMessage = \"\";\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    if (this.name === undefined || this.name === \"\" || this.email === undefined || this.email === \"\"  || this.password === undefined || this.password === \"\" || this.username === undefined || this.username === \"\") {\r\n      this.success = false;\r\n      setTimeout(()=>{                           \r\n        this.success = true;\r\n      }, 3000); \r\n    } else if (this.name.length > 40 || this.email.length > 40 || this.password.length > 40 || this.username.length > 40 ) {\r\n      this.errorMessage = \"Too many characters used!\";\r\n      setTimeout(()=>{                        \r\n        this.errorMessage = \"\";\r\n      }, 3000); \r\n    } else if ( !(this.email.includes(\"@\")) || !(this.email.endsWith(\".com\") || this.email.endsWith(\".co.uk\") || this.email.endsWith(\".ac.uk\"))) {\r\n      this.errorMessage = \"Invalid Email Address!\";\r\n      setTimeout(()=>{                        \r\n        this.errorMessage = \"\";\r\n      }, 3000); \r\n    } else {\r\n      const user = {\r\n        name: this.name,\r\n        email: this.email,\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n      this.authService.checkUsernameExists(user).subscribe(data => {\r\n        if ((data as any).success === true) {\r\n          this.errorMessage = \"This username is already taken, please choose another!\";\r\n          setTimeout(()=>{                          \r\n            this.errorMessage = \"\";\r\n          }, 3000);\r\n        } else {\r\n          this.authService.checkEmailExists(user).subscribe(data => {\r\n            if ((data as any).success === true) {\r\n              this.errorMessage = \"That email is already associated with an account, try logging in instead!\";\r\n              setTimeout(()=>{                     \r\n                this.errorMessage = \"\";\r\n              }, 3000);\r\n            } else {\r\n              this.authService.registerUser(user).subscribe(data => {\r\n                if ((data as any).success) {\r\n                  this.success = true;\r\n                  this.router.navigate(['/login']);\r\n                } else {\r\n                  this.router.navigate(['/register']);\r\n                  this.success = false;\r\n                }\r\n              });\r\n            }\r\n          });  \r\n        }\r\n      });  \r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n// NOTE: check if need ot import services?\r\nimport { AuthService } from './services/auth.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n{path: '', component: HomeComponent},\r\n{path: 'register', component: RegisterComponent},\r\n{path: 'login', component: LoginComponent},\r\n{path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n{path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n]; // sets up routes constant where you define your routes\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    // AuthService\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(routes),\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" [routerLink] =\"['/']\">Jordan's Quiz</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n      \r\n    </button>\r\n  \r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n\r\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink] =\"['/']\" >Home</a>\r\n        </li>\r\n        <li  *ngIf=\"!authService.loggedIn()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink] =\"['/login']\" >Login</a>\r\n        </li>\r\n        <li  *ngIf=\"!authService.loggedIn()\" class=\"nav-item\">\r\n         <a class=\"nav-link\"  [routerLink] =\"['/register']\">Register</a>\r\n        </li>\r\n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\r\n            <a class=\"nav-link\"  [routerLink] =\"['/profile']\">Profile</a>\r\n        </li>\r\n        <li  *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\r\n        <a class=\"nav-link\"  [routerLink] =\"['/dashboard']\">Dashboard</a>\r\n        </li>\r\n        <li *ngIf=\"authService.loggedIn()\"  class=\"nav-item\">\r\n          <a class=\"nav-link pointer\" (click)=\"onLogOutClick()\">Logout</a>\r\n          </li>\r\n        <!-- <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">About</a>\r\n        </li> --> \r\n        <!-- <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n          <div class=\"dropdown-menu\">\r\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#\">Separated link</a>\r\n          </div>\r\n        </li> -->\r\n      </ul>\r\n      <!-- <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\r\n        <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form> -->\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onLogOutClick() {\r\n    this.authService.logout();\r\n    // add message \r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n  helper = new JwtHelperService();\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user: any){\r\n      let headers = new HttpHeaders();\r\n      headers.append('Content-Type', 'application/json');\r\n      return this.http.post('users/register', user, {headers: headers})\r\n        .pipe(map((res) => res));  \r\n    }\r\n\r\n  authenticateUser(user: any){\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/authenticate', user, {headers: headers})\r\n      .pipe(map((res) => res));\r\n  }\r\n\r\n  getProfile(): any{\r\n    this.loadToken();\r\n    let headers = new HttpHeaders().append('Authorization', this.authToken).append('Content-Type', 'application/json');\r\n    return this.http.get('users/profile', {headers: headers})\r\n  }\r\n\r\n  checkUsernameExists(user: any) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/existingUsername', user, {headers: headers})\r\n      .pipe(map((res) => res));\r\n  }\r\n\r\n  checkEmailExists(user: any) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/existingEmail', user, {headers: headers})\r\n      .pipe(map((res) => res));\r\n  }\r\n  \r\n  storeUserData(token: string, user: any){\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  loggedIn(){\r\n    return !(this.helper.isTokenExpired(localStorage.id_token));\r\n  }\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}